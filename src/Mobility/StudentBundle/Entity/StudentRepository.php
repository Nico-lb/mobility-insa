<?php

namespace Mobility\StudentBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * StudentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StudentRepository extends EntityRepository
{
	public function getStudents($year) {
		$qb = $this->createQueryBuilder('s')
			->where('s.year = :year')
			->setParameter('year', $year)
			->orderBy('s.surname', 'asc');

		return $qb->getQuery()->getResult();
	}

	public function countByYears() {
		$qb = $this->createQueryBuilder('s')
			->select('s.year')
			->addSelect('count(s)')
			->groupBy('s.year');

		$res = $qb->getQuery()->getScalarResult();
		$array = array();
		foreach ($res as $r) {
			$array[$r['year']] = $r[1];
		}

		return $array;
	}

	public function countByState($year, $state) {
		$qb = $this->createQueryBuilder('s')
			->select('count(s)')
			->where('s.year = :year')
			->setParameter('year', $year)
			->andWhere('s.state = :state')
			->setParameter('state', $state);

		return $qb->getQuery()->getSingleScalarResult();
	}

	public function countByNotState($year, $state) {
		$qb = $this->createQueryBuilder('s')
			->select('count(s)')
			->where('s.year = :year')
			->setParameter('year', $year)
			->andWhere('s.state <> :state')
			->setParameter('state', $state);

		return $qb->getQuery()->getSingleScalarResult();
	}

	public function getRankedStudents($year, $promo) {
		$qb = $this->createQueryBuilder('s')
			->where('s.promo = :promo')
			->setParameter('promo', $promo)
			->andWhere('s.year = :year')
			->setParameter('year', $year)
			->andWhere('s.rank > 0')
			->orderBy('s.rank', 'asc');

		return $qb->getQuery()->getResult();
	}

	/*
	public function getYears() {
		$qb = $this->createQueryBuilder('s')
			->select('s.year')
			->groupBy('s.year')
			->orderBy('s.year', 'desc');

		$values = $qb->getQuery()->getScalarResult();
		$r = array();
		foreach ($values as $v) {
			$r[] = $v['year'];
		}

		return $r;
	}*/
}
